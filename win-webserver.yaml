kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: win-webserver
  name: win-webserver
spec:
  selector:
    matchLabels:
      app: win-webserver
  replicas: 1
  template:
    metadata:
      labels:
        app: win-webserver
      name: win-webserver
    spec:
      tolerations:
      - key: "os"
        value: "Windows"
        Effect: "NoSchedule"
      containers:
      - name: windowswebserver
        image: mcr.microsoft.com/windows/servercore:ltsc2019
        imagePullPolicy: IfNotPresent
        command:
        - powershell.exe
        - -command
        - $listener = New-Object System.Net.HttpListener; $listener.Prefixes.Add('http://*:80/'); $listener.Start();Write-Host('Listening at http://*:80/'); while ($listener.IsListening) { $context = $listener.GetContext(); $response = $context.Response; $content='<html><body><H1>Windows Container Web Server</H1><H2>Thanks for attending our live demo session!</H2></body></html>'; $buffer = [System.Text.Encoding]::UTF8.GetBytes($content); $response.ContentLength64 = $buffer.Length; $response.OutputStream.Write($buffer, 0, $buffer.Length); $response.Close(); };
      nodeSelector:
        beta.kubernetes.io/os: windows
---
kind: Service
apiVersion: v1
metadata:
  name: win-webserver
  labels:
    app: win-webserver
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    app: win-webserver
  type: LoadBalancer
---
kind: Route 
apiVersion: route.openshift.io/v1
metadata:
  name: win-webserver
  namespace: default
  labels:
    app: win-webserver
    app.kubernetes.io/component: win-webserver
    app.kubernetes.io/instance: win-webserver
    app.kubernetes.io/part-of: win-webserver
    app.openshift.io/runtime-version: latest
spec:
  to:
    kind: Service
    name: win-webserver
    weight: 100
  port:
    targetPort: 80
  wildcardPolicy: None
